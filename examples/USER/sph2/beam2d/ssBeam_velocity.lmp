# beam clamped at left end
# here: velocity-formulation

variable         ny equal 4
variable         nx equal 8*${ny} # number of particles along longitudinal direction
variable         dx equal 1.0/${ny} # beam is 8 length units long
variable         dmax equal 0.1*${ny}*${dx}
variable         h equal 2.42001*${dx} # horizon based on lattic spacing, plus fudge factor
variable         rho equal 1.0 # mass density
variable         E equal 100
variable         nu equal 0.3 # Poisson ratio
variable         hg equal 25.0

newton           off
units            si
dimension        2
boundary         s s p
atom_style       tlsph
comm_modify      vel yes

# create box & bar
variable           dxhalf equal ${dx}/2.0
lattice            custom 1 a1 ${dx} 0 0 a2 0 ${dx} 0 a3 0 0 ${dx} basis 0.5 0.5 0

variable           x0 equal -3 # left box bound
variable           x1 equal ${nx} # right box bound

region             box block ${x0} ${x1} 0 ${ny} -0.1 0.1 units lattice
create_box         1 box
create_atoms       1 box
#
# *** now derive quantities from above variables ***
variable         vol_one equal ${dx}*${dx} # volume per particle
variable         m equal ${vol_one}*${rho} # mass per particle
variable         skin equal 2*${h} # Verlet skin distance
variable         c0 equal sqrt(${E}/${rho})
variable         dtCFL equal 0.125*${h}/${c0} # CFL timestep
print            "major E=${E}, c0=${c0}, dtCFL=${dtCFL}"
variable         vel equal 1*0.125e-4*${c0}
timestep           ${dtCFL}

# create clamp boundary condition group
region             clamp block EDGE 0.0 EDGE EDGE EDGE EDGE units box #clamp particles with x < 0
group              clamp region clamp

# create displacement boundary condition group
variable           x1 equal ${nx}-1
variable           y1 equal ${ny}-1
region             dispGrp block ${x1} EDGE ${y1} EDGE EDGE EDGE units lattice # for bending
#region             dispGrp block ${x1} EDGE EDGE EDGE EDGE EDGE units lattice # for uniaxial pull
group              dispGrp region dispGrp

# create free-to-move group
group              free subtract all clamp dispGrp

# Set particle mass & initial mass density
#set             group all contact_radius ${dxhalf}
set             group all diameter ${h}
set             group all mass ${m}
set             group all volume ${vol_one}

# material model
pair_style      tlsph
#                                        c0    E    nu    hg    visc sigy
pair_coeff      1 1 linear      linear ${c0} ${E} ${nu} ${hg} 0.01  100.0


# update CFL timestep
#variable           travelmax equal 0.1*${dx}
#fix                dtfix all tlsph/dt/reset 1 NULL NULL ${travelmax}

velocity           dispGrp set 0 ${vel}  0 units box
fix                ffix1 dispGrp setforce NULL 0 NULL
fix                ffix2 clamp   setforce 0 0 0
fix                integration_fix all tlsph/integrate -1 #xsph

compute            peatom all pe/atom
compute            E all tlsph/strain
compute            S all tlsph/stress
compute            FG all tlsph/defgrad
compute            nn all tlsph/num_neighs
compute            contact_radius all tlsph/contact_radius
variable           d equal -${vel}*dt*step
variable           nrun equal round((${dmax}/${vel})/dt)
print              "running for ${nrun} steps"
variable           dumpFreq equal round(${nrun}/50)
variable           thermoFreq equal round(${nrun}/100)
variable           slope equal f_ffix1[2]/(v_d+1.0e-8)
variable           sumF equal f_ffix1[2]

fix                fd_curve all print ${thermoFreq} "${d} ${sumF}" file force_displacement_velocity_${nx}.dat screen no

dump               dump_id all custom ${dumpFreq} dump.LAMMPS id type x y z mol fx fy c_contact_radius &
                   c_E[1] c_E[2] c_E[3] c_E[4] c_E[5] c_E[6] &
                   c_S[1] c_S[2] c_S[3] c_S[4] c_S[5] c_S[6] &
                   c_FG[10] &
                   c_nn

thermo             ${thermoFreq}
thermo_style       custom step v_d v_sumF v_slope
#thermo_style       custom step v_d dt f_ffix1[2] f_ffix2[2] v_slope f_dtfix f_dtfix[1]
thermo_modify      norm no lost ignore

neigh_modify       once yes #every 10 delay 0 check yes
neighbor           ${skin} bin


# output bending moment
variable            E_2d equal ${E}/(1.0-${nu}^2)
variable            beamWidth  equal 1.0
variable            beamHeight equal 1.0
variable            beamLength equal 8.0
variable            I equal ${beamWidth}*(${beamHeight}^3)/12.0
print               "I=${I}"
variable            P equal 3*${E_2d}*${I}*${dmax}/(${beamLength}^3)
variable            slope_ref equal ${P}/${dmax}
print               "maximum force is ${P}, slope is ${slope_ref}"
run                  ${nrun}
print               "maximum force is ${P}, slope is ${slope_ref}"

